/*----------------------------------------------------------------------*/
/*---------------------------- UNCLASSIFIED ----------------------------*/
/*----------------------------------------------------------------------*/

/*----------------------------------------------------------------------*/
/*----------------------------- DESCRIPTION ----------------------------*/
/*----------------------------------------------------------------------*/ 

/*----------------------------------------------------------------------*/
/*------------------------------ INCLUDES ------------------------------*/
/*----------------------------------------------------------------------*/ 

#include <include1.h>
#include <include2.h>
#include <string>
#include "projectHeader1.h"
#include "projectHeader2.h"
#include "projectHeader3.h"
/*----------------------------------------------------------------------*/
/*------------------------ FORWARD DECLARATIONS ------------------------*/
/*----------------------------------------------------------------------*/ 

/*----------------------------------------------------------------------*/
/*------------------------------- USINGS -------------------------------*/
/*----------------------------------------------------------------------*/ 

namespace A {
namespace B {
namespace C {
namespace D {
/*----------------------------------------------------------------------*/
/*-------------------------- GLOBAL VARIABLES --------------------------*/
/*----------------------------------------------------------------------*/ 

/*----------------------------------------------------------------------*/
/*----------------------- CONSTRUCTOR/DESTRUCTOR -----------------------*/
/*----------------------------------------------------------------------*/ 

ImaginaryClass::ImaginaryClass (OTHERCLASS* pointer) : 
DefinitelyRealSuper()
//bool
myBool(false)
/*----------------------------------------------------------------------*/
/*------------------------------ FUNCTIONS -----------------------------*/
/*----------------------------------------------------------------------*/ 

bool ImaginaryClass::changeObjectName (const std::string identifier) 
{ 

}
/*----------------------------------------------------------------------*/
/*----------------------------------------------------------------------*/
double ImaginaryClass::changeObjectValue(const double& newValue, int valueWeWontUse) 
{ 

}
/*----------------------------------------------------------------------*/
/*----------------------------------------------------------------------*/
double ImaginaryClass::changeObjectValue(const double& newValue, int valueWeWontUse) 
{ 

}
double& getObjectValue () const 
{ 

}
const ImaginaryClass::changeObjectValue(const double& newValue, int valueWeWontUse) 
{ 

}
double& getObjectValue () const 
{ 

}
/*----------------------------------------------------------------------*/
/*------------------------------ OPERATORS -----------------------------*/
/*----------------------------------------------------------------------*/ 

/*----------------------------------------------------------------------*/
/*------------------------------ TEMPLATES -----------------------------*/
/*----------------------------------------------------------------------*/ 

/*----------------------------------------------------------------------*/
/*------------------------- CLOSING NAMESPACES -------------------------*/
/*----------------------------------------------------------------------*/ 

/*----------------------------------------------------------------------*/
/*---------------------------- UNCLASSIFIED ----------------------------*/
/*----------------------------------------------------------------------*/ 

